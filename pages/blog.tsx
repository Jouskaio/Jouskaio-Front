import {client} from "../lib/blog/apolloClient";
import Query, {getStrapiMedia} from "../lib/blog/api";
/**
 * I don't know why, but Apollo works only if with calls it with @apollo/react-hooks even with this module isn't downloaded unlike the other one @apollo/client
 */
// @ts-ignore
import {ApolloProvider} from "@apollo/client";
import ARTICLES_QUERY from "../lib/blog/article/articles";
import NavCategories from '../components/molecule/navigation/categories'
import React from "react";
import Card from "../components/molecule/media/card";
import Header from "../components/organisms/navigation/header";
// @ts-ignore
import Head from "next/head";
import TextSpanXXXL from "../components/atom/text/textSpanXXXL";
// @ts-ignore
import Image from "next/image";
import {shimmer, toBase64} from "../components/protons/preload/preload-image";
// <AllArticles/>
export default class Blog extends React.Component {
  render() {
    if(!client) {
      return <p>Loading</p>
    }
    return (
        <>
            {/* Initialize Effect */}
            {/*{scroll.scroll}*/}
            <Head>
                <title>Manon Salsou - Jouskaio's portfolio 2022</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0"/>
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <>
                <ApolloProvider client={client}>
                    <main className={"l-blog"}>
                        <Header/>
                        <nav className={"l-blog__a-sizeSection l-blog__m-categories"}><NavCategories/></nav>
                        <Query query={ARTICLES_QUERY}>
                            {({data: {articles}}) => {
                                let lengthArticles = articles.data.length
                                if (lengthArticles > 1) {
                                    let mainArticle = articles.data[0]
                                    let nextArticles = articles.data.slice(1)
                                    return (
                                        <div className={"l-blog__a-sizeSection l-blog__o-articlesContainer"}>
                                            <div className={"l-blog__o-mainArticle"}>
                                                <div className={"l-blog__m-mainArticle"}>
                                                    <div className={"l-blog__m-mainInformations"}></div>
                                                </div>
                                                <nav className={"l-blog__a-mainImage"}><Image src={getStrapiMedia(mainArticle.attributes.image)} object-fit={"fill"} unoptimized={false} layout='fill' placeholder="blur" blurDataURL={`data:image/svg+xml;base64,${toBase64(shimmer("100%", "100%"))}`} loader={() => getStrapiMedia(mainArticle.attributes.image)}></Image></nav>
                                            </div>
                                            <div className={"l-blog__o-nextArticles"}>
                                                <nav className={"l-blog__a-title"}><TextSpanXXXL><span className={"l-blog__a-title--span"}>Blog</span></TextSpanXXXL></nav>
                                                <div className={"l-blog__m-divNextArticles"}>
                                                    {
                                                        nextArticles.map((article) => {
                                                            return (
                                                                <Card
                                                                    article={article}
                                                                    key={`article__${article.attributes.slug}`}
                                                                />
                                                            );
                                                        })
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    )
                                }
                            }}
                        </Query>
                    </main>
                </ApolloProvider>
            </>
        </>
    );
  }
}

