#name: Build and Deploy API
#
#on:
#  push:
#    branches:
#      - develop
#    paths:
#      - 'andhrimnir-api/**'
#      - '.github/workflows/api-workflow.yml'
#
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Build and push Docker image
#        run: |
#          cd andhrimnir-api
#          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/andhrimnir-api:latest .
#          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/andhrimnir-api:latest
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Add SSH key
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
#
#      - name: Deploy to remote server
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
#            cd ~/projects/Andhrimnir/dev/
#            docker-compose down
#            docker-compose pull
#            docker-compose up -d --build
#          EOF
#
#      - name: Send notification to Discord
#        if: success()
#        run: |
#          TITLE="${{ github.event.inputs.title }}"
#          curl -H "Content-Type: application/json" -X POST -d '{"content": "ðŸŸ¢ API Deployment to dev was successful for '"$TITLE"' !"}' ${{ secrets.DISCORD_WEBHOOK_URL }}
#
#      - name: Send failure notification to Discord
#        if: failure()
#        run: |
#          TITLE="${{ github.event.inputs.title }}"
#          curl -H "Content-Type: application/json" -X POST -d '{"content": "ðŸ”´ API Deployment to dev failed for '"$TITLE"'"}' ${{ secrets.DISCORD_WEBHOOK_URL }}
