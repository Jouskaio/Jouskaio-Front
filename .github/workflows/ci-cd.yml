name: CI/CD - WEB-Jouskaio.me

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Upgrade checkout action
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main

      # Install OpenVPN
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      # Create VPN Config File
      - name: Create VPN Config File
        run: echo "${{ secrets.VPN_CONFIG }}" > vpn_config.ovpn

      # Connect to VPN
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: vpn_config.ovpn

      # Test SSH Connection
      - name: Test SSH Connection
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key
          ssh -vvv -o StrictHostKeyChecking=no -i /tmp/private_key ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} whoami

      # Build & Deploy
      - name: Deploy to remote server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USERNAME }}
          TARGET: "/home/debian/Documents/jouskaio.me/WEB-Jouskaio.me"
          EXCLUDE: "/dist/, /node_modules/"
          SCRIPT_AFTER: |
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            # Aller dans le dossier du projet
            cd /home/debian/Documents/jouskaio.me/WEB-Jouskaio.me

            # Synchroniser avec le dernier code
            git fetch --all
            git reset --hard origin/main

            # Installer les dépendances
            if [ ! -d "node_modules" ]; then
              rm -rf node_modules package-lock.json yarn.lock && yarn install
            fi

            # Build l'application
            yarn build

            # Redémarrer avec PM2
            pm2 start ecosystem.config.js --env production || pm2 reload ecosystem.config.js --env production